# This will run on Travis' 'new' container-based infrastructure
sudo: true

# Setup for Ubuntu Bionic (18.04)
dist: bionic

language:
  - python

python:
  - 3.7

# Environment variables
env:
  global:
    - PACKAGE_DIR: $HOME/packages
    - GIT_REPO: slaclab/aes-stream-drivers
    - VERSION: $TRAVIS_TAG

# Install dependencies
addons:
  apt:
    packages:
      - debhelper
      - dkms
      - fakeroot
      - rpm

stages:
    - name: gen_release
      if: tag IS present
    # On master branch (but not on PRs to master) or in tagged releases
    # generate and deploy the documentation
    - name: generate_and_deploy
      if: (branch = master AND NOT (type = pull_request)) OR tag IS present
    # On all other branches or PRs, but not on tagged releases
    # only try to generate the documentation
    - name: generate
      if: (branch != master OR (type == pull_request)) AND tag IS blank
    - name: deploy_dev
      if: branch = pre-release AND tag IS blank AND NOT (type = pull_request)
    - name: deploy_tag
      if: tag IS present

# Generate and deploy documentation
jobs:
  include:
    - &deploy-dkms-stage
      stage: deploy_tag
      name: "Deploy Data Dev"
      env:
        - MODULE=datadev
        - MODULE_DIR=data_dev/driver
        - DEST_DIR=/usr/src/${MODULE}-${VERSION}
      install:
        - pip install -r pip_requirements.txt
      before_script:
        - sudo mkdir $DEST_DIR
        - sudo mkdir $DEST_DIR/src
        - sudo cp ${MODULE_DIR}/src/* ${DEST_DIR}/src
        - sudo cp ${MODULE_DIR}/Makefile $DEST_DIR
        - sudo cp ${MODULE_DIR}/dkms.conf $DEST_DIR
        - sudo cp ${MODULE_DIR}/${MODULE}.conf $DEST_DIR
        - sudo echo "PACKAGE_VERSION=$VERSION" | sudo tee -a ${DEST_DIR}/dkms.conf
        - sudo echo "echo ${MODULE}" | sudo tee -a ${DEST_DIR}/datadev_load.conf
        - sudo echo "#!/bin/bash" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo echo "dkms add -m $MODULE -v $VERSION" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo echo "dkms build -m $MODULE -v $VERSION -a x86_64" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo echo "dkms install -m $MODULE -v $VERSION -a x86_64" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo echo "scp ${MODULE}_load.conf /etc/modules-load.d" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo echo "modprobe ${MODULE}" | sudo tee -a ${DEST_DIR}/install.sh
        - sudo chmod a+rx ${DEST_DIR}/install.sh
      script:
        - sudo dkms add -m $MODULE -v $VERSION
        - sudo dkms mkdeb -m $MODULE -v $VERSION --source-only
        - python scripts/uploadTag.py --tag=$VERSION --repo=$GIT_REPO --file=/var/lib/dkms/${MODULE}/${VERSION}/deb/${MODULE}-dkms_${VERSION}_amd64.deb
        - tar -cvvzpf ${MODULE}-${VERSION}.tgz $DEST_DIR
        - python scripts/uploadTag.py --tag=$VERSION --repo=$GIT_REPO --file=${MODULE}-${VERSION}.tgz

    - <<: *deploy-dkms-stage
      name: "Deploy Data Gpu"
      env:
        - MODULE=datagpu
        - MODULE_DIR=data_gpu/driver
        - DEST_DIR=/usr/src/${MODULE}-${VERSION}

    - stage: gen_release
      name: "Generate Release"
      install:
         - git clone https://github.com/slaclab/ruckus.git -b alt_version
         - pip install -r ruckus/scripts/pip_requirements.txt
      script:
         - python ruckus/scripts/releaseGen.py

